<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ensoftener</name>
    </assembly>
    <members>
        <member name="T:Ensoftener.Global">
            <summary>The class containing everything necessary, from Direct2D components to new and useful DeviceContext methods.</summary>
        </member>
        <member name="P:Ensoftener.Global.D2DFactory">
            <summary>The class used for registering your custom effects.</summary><remarks>Based on D2DDevice.</remarks>
        </member>
        <member name="P:Ensoftener.Global.D2DDevice">
            <remarks>Based on D3DDevice.</remarks>
        </member>
        <member name="P:Ensoftener.Global.D3DDevice">
            <remarks>Based either on a DXGIFactory or can be freely created.</remarks>
        </member>
        <member name="P:Ensoftener.Global.DXGIFactories">
            <summary>This is where it all starts. The factories from which everything else is derived.</summary>
        </member>
        <member name="P:Ensoftener.Global.SwapChains">
            <remarks>Based on D3DDevice and a DXGIFactory.</remarks>
        </member>
        <member name="P:Ensoftener.Global.DCs">
            <summary>The DeviceContexts used for rendering everything, probably the most used class of them all.</summary><remarks>Based on D2DDevice.</remarks>
        </member>
        <member name="P:Ensoftener.Global.RenderTargets">
            <summary>The render target of the DeviceContext.</summary><remarks>Based on a DeviceContext and a SwapChain.</remarks>
        </member>
        <member name="P:Ensoftener.Global.DWriteFactory">
            <summary>The class passed as a parameter when rendering text.</summary><remarks>Can be freely created.</remarks>
        </member>
        <member name="P:Ensoftener.Global.WICFactory">
            <summary>The class used for creating SVG's.</summary><remarks>Can be freely created.</remarks>
        </member>
        <member name="P:Ensoftener.Global.OutputDevice">
            <summary>The index of the setup that will serve as the output and present its contents to the screen.</summary>
        </member>
        <member name="M:Ensoftener.Global.Initialize(System.Int32,System.Nullable{SharpDX.Size2})">
            <summary>Creates all the stuff needed for a basic SharpDX setup. The first device (0th) will be set as output.</summary>
            <param name="DeviceDpi">Set this to your form's DeviceDpi property.</param>
            <param name="parallelDevices">The amount of parallel Direct2D setups to create (for multirendering).
            All components will be accessible from their lists. Cannot be less than 1.</param>
            <param name="sizes">The default size of all device contexts, except for the outputting one. By default it's the window size.</param>
        </member>
        <member name="M:Ensoftener.Global.LoadBitmapFromFile(SharpDX.Direct2D1.DeviceContext,System.String)">
            <summary> Creates a SharpDX Bitmap off of an image file.</summary>
        </member>
        <member name="M:Ensoftener.Global.ConvertGDIToD2DBitmap(SharpDX.Direct2D1.DeviceContext,System.Drawing.Bitmap)">
            <summary> Creates a SharpDX Bitmap off of a GDI+ bitmap.</summary>
        </member>
        <member name="M:Ensoftener.Global.ToGDIBitmap(SharpDX.Direct2D1.Bitmap1)">
            <summary> Creates a GDI+ bitmap off of a SharpDX Bitmap. (very slow)</summary>
        </member>
        <member name="M:Ensoftener.Global.GetScreenCPURead(SharpDX.Direct2D1.DeviceContext,System.Nullable{SharpDX.Rectangle},System.Nullable{SharpDX.Point})">
            <summary>Copies the device context's render target for further CPU processing (such as saving to a file).</summary>
            <returns>The render target's bitmap. Requires a newer version of DirectX and cannot be read by the GPU.</returns>
        </member>
        <member name="M:Ensoftener.Global.GetScreenGPURead(SharpDX.Direct2D1.DeviceContext,System.Nullable{SharpDX.Rectangle},System.Nullable{SharpDX.Point})">
            <summary>Copies the device context's render target for further GPU processing (such as shaders).</summary>
            <returns>The render target's bitmap. The bitmap cannot be read by the CPU.</returns>
        </member>
        <member name="M:Ensoftener.Global.RenderScreenShaders(SharpDX.Direct2D1.DeviceContext,Ensoftener.EffectTransformer,System.Boolean,SharpDX.Direct2D1.Effect[])">
            <summary>Batch renders an array of effects applied go the entire screen.</summary>
            <param name="transform">An additional transorm to apply at the end.</param>
            <param name="uvPrecision">When off, the screen size will round to a power of 2 and any shader using texture coordinates will become practically unusable.
            <br/>When on, the coordinates will display correctly but the performance of shaders will decrease.</param>
            <param name="effects">The array of effects to render.</param>
        </member>
        <member name="M:Ensoftener.Global.AddSetups(System.Int32,System.Nullable{SharpDX.Size2})">
            <summary>Adds a new amount of parallel rendering setups.</summary>
            <param name="amount">The amount of setups to create.</param>
            <param name="Sizes">The default size of the device contexts about to be created. By default it's the window size.</param>
        </member>
        <member name="M:Ensoftener.Global.ResizeSetup(System.Int32,SharpDX.Size2)">
            <summary>Resizes a setup.</summary>
            <param name="index">The index of the setup in the list.</param>
            <param name="size">New rendering size.</param>
        </member>
        <member name="M:Ensoftener.Global.BeginRender">
            <summary>Put this at the beginning of your render method.</summary>
        </member>
        <member name="M:Ensoftener.Global.EndRender">
            <summary>Put this at the end of your render method.</summary>
        </member>
        <member name="M:Ensoftener.Global.RemoveSetup(System.Int32)">
            <summary>Disposes of a setup and removes it from the lists.</summary>
        </member>
        <member name="M:Ensoftener.Global.ResizeWithScreen(SharpDX.Direct2D1.DeviceContext,System.Boolean)">
            <summary>Set this context to be resizable with the screen.</summary>
        </member>
        <member name="T:Ensoftener.ShadedEffectBase">
            <summary>
            A prefabricated effect inherited from CustomEffectBase. You can modify its input count, constant buffer and its nodes.
            <br/>You can even nest more effects inside it, which then can work with 32-bit float color depth.
            </summary>
        </member>
        <member name="T:Ensoftener.SvgImage">
            <summary>A SVG image that can be modified at runtime.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.UpdateifOutdated">
            <summary>Rebuilds the SVG everytime the Outdated is set to true.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.Outdated">
            <summary>Direct2D-controlled SVG elements are less accessible than in a normal XML parser, and therefore can go out of sync.
            This flag indicates that the SVG needs to be recreated.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.X">
            <summary>X position of the SVG.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.Y">
            <summary>Y position of the SVG.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.Rotation">
            <summary>Rotation of the SVG, clockwise, in degrees.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.Width">
            <summary>Width <b>multiplier</b> of the SVG.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.Height">
            <summary>Height <b>multiplier</b> of the SVG.</summary>
        </member>
        <member name="M:Ensoftener.SvgImage.#ctor(SharpDX.Direct2D1.DeviceContext,System.String,System.Boolean)">
            <summary>Creates an SVG image from a file or an XML string.</summary>
            <param name="input">The file path or XML string.</param>
            <param name="fromFile">Determines whether to read from a file or from the string itself.</param>
        </member>
        <member name="M:Ensoftener.SvgImage.Rebuild">
            <summary>Recreates the SVG image. See the description of the <b><see cref="P:Ensoftener.SvgImage.Outdated"/></b> property for why this needs to be done.
            <br/>This method is automatically called when <b><see cref="P:Ensoftener.SvgImage.UpdateifOutdated"/></b> is set to true.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.SvgElement1.Attributes">
            <summary>Gets all attribute names that exist in this element.</summary>
        </member>
        <member name="P:Ensoftener.SvgImage.SvgElement1.Item(System.String)">
            <summary>Gets or sets an attribute by its name. <b>If you're creating a new attribute, the SVG becomes outdated.</b></summary>
        </member>
    </members>
</doc>
